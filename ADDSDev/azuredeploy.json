{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1.14562",
      "templateHash": "14152996160063311697"
    }
  },
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator account of the new VM and domain"
      }
    },
    "adminPassword": {
      "type": "secureString",
      "metadata": {
        "description": "The password for the administrator account of the new VM and domain"
      }
    },
    "domainName": {
      "type": "string",
      "defaultValue": "testcorp.local",
      "metadata": {
        "description": "The FQDN of the Active Directory Domain to be created"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of the VM for the controller"
      }
    },
    "artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/SMBrook/SQLAOAG/main/ADDSDev/",
      "metadata": {
        "description": "The location of resources, such as templates and DSC modules, that the template depends on"
      }
    },
    "artifactsLocationSasToken": {
      "type": "secureString",
      "defaultValue": "",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "virtualMachineName": {
      "type": "string",
      "defaultValue": "adVM",
      "metadata": {
        "description": "Virtual machine name."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "adVNET",
      "metadata": {
        "description": "Virtual network name."
      }
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "defaultValue": "10.100.0.0/16",
      "metadata": {
        "description": "Virtual network address range."
      }
    },
    "networkInterfaceName": {
      "type": "string",
      "defaultValue": "adNic",
      "metadata": {
        "description": "Network interface name."
      }
    },
    "privateIPAddress": {
      "type": "string",
      "defaultValue": "10.100.0.4",
      "metadata": {
        "description": "Private IP address."
      }
    },
    "adsubnetname": {
      "type": "string",
      "defaultValue": "ADSubnet",
      "metadata": {
        "description": "Subnet name."
      }
    },
    "adsubnetrange": {
      "type": "string",
      "defaultValue": "10.100.0.0/24",
      "metadata": {
        "description": "AD Subnet IP range."
      }
    },
    "sqlsubnetname": {
      "type": "string",
      "defaultValue": "SQLSubnet",
      "metadata": {
        "description": "Subnet name."
      }
    },
    "sqlsubnetrange": {
      "type": "string",
      "defaultValue": "10.101.0.0/24",
      "metadata": {
        "description": "AD Subnet IP range."
      }
    },
    "availabilitySetName": {
      "type": "string",
      "defaultValue": "adAvailabiltySet",
      "metadata": {
        "description": "Availability set name."
      }
    },
    "sqlvirtualMachineName": {
      "type": "string",
      "defaultValue": "sql1",
      "metadata": {
        "description": "The name of the VM"
      }
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D8s_v3",
      "metadata": {
        "description": "The virtual machine size."
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "sql2019-ws2019",
      "metadata": {
        "description": "Windows Server and SQL Offer"
      },
      "allowedValues": [
        "sql2019-ws2019",
        "sql2017-ws2019",
        "SQL2017-WS2016",
        "SQL2016SP1-WS2016",
        "SQL2016SP2-WS2016",
        "SQL2014SP3-WS2012R2",
        "SQL2014SP2-WS2012R2"
      ]
    },
    "sqlSku": {
      "type": "string",
      "defaultValue": "SQLDEV",
      "metadata": {
        "description": "SQL Server Sku"
      },
      "allowedValues": [
        "Standard",
        "Enterprise",
        "SQLDEV",
        "Web",
        "Express"
      ]
    },
    "sqladminUsername": {
      "type": "string",
      "metadata": {
        "description": "The admin user name of the VM"
      }
    },
    "sqladminPassword": {
      "type": "secureString",
      "metadata": {
        "description": "The admin password of the VM"
      }
    },
    "storageWorkloadType": {
      "type": "string",
      "defaultValue": "GENERAL",
      "metadata": {
        "description": "SQL Server Workload Type"
      },
      "allowedValues": [
        "GENERAL",
        "OLTP",
        "DW"
      ]
    },
    "sqlDataDisksCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Amount of data disks (100GB each) for SQL Data files"
      },
      "maxValue": 8,
      "minValue": 1
    },
    "dataPath": {
      "type": "string",
      "defaultValue": "F:\\SQLData",
      "metadata": {
        "description": "Path for SQL Data files. Please choose drive letter from F to Z, and other drives from A to E are reserved for system"
      }
    },
    "sqlLogDisksCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Amount of data disks (100GB each) for SQL Log files"
      },
      "maxValue": 8,
      "minValue": 1
    },
    "logPath": {
      "type": "string",
      "defaultValue": "G:\\SQLLog",
      "metadata": {
        "description": "Path for SQL Log files. Please choose drive letter from F to Z and different than the one used for SQL data. Drive letter from A to E are reserved for system"
      }
    }
  },
  "functions": [],
  "variables": {
    "networkInterfaceName_var": "[format('{0}-nic', parameters('sqlvirtualMachineName'))]",
    "diskConfigurationType": "NEW",
    "dataDisksLuns": "[array(range(0, parameters('sqlDataDisksCount')))]",
    "logDisksLuns": "[array(range(parameters('sqlDataDisksCount'), parameters('sqlLogDisksCount')))]",
    "dataDisks": {
      "createOption": "Empty",
      "caching": "ReadOnly",
      "writeAcceleratorEnabled": false,
      "storageAccountType": "Premium_LRS",
      "diskSizeGB": 100
    },
    "tempDbPath": "D:\\SQLTemp"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2019-03-01",
      "name": "[parameters('availabilitySetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "platformUpdateDomainCount": 20,
        "platformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-02-01",
      "name": "[parameters('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('privateIPAddress')]",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('adsubnetname'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'VNet')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-03-01",
      "name": "[parameters('virtualMachineName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2019-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[format('{0}_OSDisk', parameters('virtualMachineName'))]",
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": [
            {
              "name": "[format('{0}_DataDisk', parameters('virtualMachineName'))]",
              "caching": "ReadWrite",
              "createOption": "Empty",
              "diskSizeGB": 20,
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              },
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2019-03-01",
      "name": "[format('{0}/{1}', parameters('virtualMachineName'), 'CreateADForest')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.19",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[uri(parameters('artifactsLocation'), format('DSC/CreateADPDC.zip{0}', parameters('artifactsLocationSasToken')))]",
          "ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
          "Properties": {
            "DomainName": "[parameters('domainName')]",
            "AdminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "PrivateSettingsRef:AdminPassword"
            }
          }
        },
        "protectedSettings": {
          "Items": {
            "AdminPassword": "[parameters('adminPassword')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-06-01",
      "name": "[variables('networkInterfaceName_var')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('sqlsubnetname'))]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ],
        "enableAcceleratedNetworking": true
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-06-01",
      "name": "[parameters('sqlvirtualMachineName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "copy": [
            {
              "name": "dataDisks",
              "count": "[length(range(0, add(parameters('sqlDataDisksCount'), parameters('sqlLogDisksCount'))))]",
              "input": {
                "lun": "[range(0, add(parameters('sqlDataDisksCount'), parameters('sqlLogDisksCount')))[copyIndex('dataDisks')]]",
                "createOption": "[variables('dataDisks').createOption]",
                "caching": "[if(greaterOrEquals(range(0, add(parameters('sqlDataDisksCount'), parameters('sqlLogDisksCount')))[copyIndex('dataDisks')], parameters('sqlDataDisksCount')), 'None', variables('dataDisks').caching)]",
                "writeAcceleratorEnabled": "[variables('dataDisks').writeAcceleratorEnabled]",
                "diskSizeGB": "[variables('dataDisks').diskSizeGB]",
                "managedDisk": {
                  "storageAccountType": "[variables('dataDisks').storageAccountType]"
                }
              }
            }
          ],
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          },
          "imageReference": {
            "publisher": "MicrosoftSQLServer",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('sqlSku')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName_var'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('sqlvirtualMachineName')]",
          "adminUsername": "[parameters('sqladminUsername')]",
          "adminPassword": "[parameters('sqladminPassword')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": true,
            "provisionVMAgent": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName_var'))]"
      ]
    },
    {
      "type": "Microsoft.SqlVirtualMachine/sqlVirtualMachines",
      "apiVersion": "2017-03-01-preview",
      "name": "[parameters('sqlvirtualMachineName')]",
      "location": "[parameters('location')]",
      "properties": {
        "virtualMachineResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('sqlvirtualMachineName'))]",
        "sqlManagement": "Full",
        "sqlServerLicenseType": "PAYG",
        "storageConfigurationSettings": {
          "diskConfigurationType": "[variables('diskConfigurationType')]",
          "storageWorkloadType": "[parameters('storageWorkloadType')]",
          "sqlDataSettings": {
            "luns": "[variables('dataDisksLuns')]",
            "defaultFilePath": "[parameters('dataPath')]"
          },
          "sqlLogSettings": {
            "luns": "[variables('logDisksLuns')]",
            "defaultFilePath": "[parameters('logPath')]"
          },
          "sqlTempDbSettings": {
            "defaultFilePath": "[variables('tempDbPath')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('sqlvirtualMachineName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "VNet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "adsubnetname": {
            "value": "[parameters('adsubnetname')]"
          },
          "adsubnetrange": {
            "value": "[parameters('adsubnetrange')]"
          },
          "sqlsubnetname": {
            "value": "[parameters('sqlsubnetname')]"
          },
          "sqlsubnetrange": {
            "value": "[parameters('sqlsubnetrange')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1.14562",
              "templateHash": "8589470185024356803"
            }
          },
          "parameters": {
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Virtual Network to Create"
              }
            },
            "virtualNetworkAddressRange": {
              "type": "string",
              "metadata": {
                "description": "The address range of the new VNET in CIDR format"
              }
            },
            "adsubnetname": {
              "type": "string",
              "metadata": {
                "description": "The name of the subnet created in the new VNET"
              }
            },
            "adsubnetrange": {
              "type": "string",
              "metadata": {
                "description": "The address range of the subnet created in the new VNET"
              }
            },
            "sqlsubnetname": {
              "type": "string",
              "metadata": {
                "description": "The name of the subnet created in the new VNET"
              }
            },
            "sqlsubnetrange": {
              "type": "string",
              "metadata": {
                "description": "The name of the subnet created in the new VNET"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-08-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetworkAddressRange')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[parameters('adsubnetname')]",
                    "properties": {
                      "addressPrefix": "[parameters('adsubnetrange')]"
                    }
                  },
                  {
                    "name": "[parameters('sqlsubnetname')]",
                    "properties": {
                      "addressPrefix": "[parameters('sqlsubnetrange')]"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "UpdateVNetDNS",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnetName": {
            "value": "[parameters('sqlsubnetname')]"
          },
          "subnetRange": {
            "value": "[parameters('sqlsubnetrange')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('privateIPAddress')]"
            ]
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1.14562",
              "templateHash": "9929071116105426038"
            }
          },
          "parameters": {
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Virtual Network to Create"
              }
            },
            "virtualNetworkAddressRange": {
              "type": "string",
              "metadata": {
                "description": "The address range of the new VNET in CIDR format"
              }
            },
            "subnetName": {
              "type": "string",
              "metadata": {
                "description": "The name of the subnet created in the new VNET"
              }
            },
            "subnetRange": {
              "type": "string",
              "metadata": {
                "description": "The address range of the subnet created in the new VNET"
              }
            },
            "DNSServerAddress": {
              "type": "array",
              "metadata": {
                "description": "The DNS address(es) of the DNS Server(s) used by the VNET"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-08-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetworkAddressRange')]"
                  ]
                },
                "dhcpOptions": {
                  "dnsServers": "[parameters('DNSServerAddress')]"
                },
                "subnets": [
                  {
                    "name": "[parameters('subnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnetRange')]"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('virtualMachineName'), 'CreateADForest')]"
      ]
    }
  ],
  "outputs": {
    "sqladminUsername": {
      "type": "string",
      "value": "[parameters('sqladminUsername')]"
    }
  }
}